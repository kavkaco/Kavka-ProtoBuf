syntax = "proto3";
package events.v1;

import "protobuf/model/chat/v1/chat.proto";
import "protobuf/model/message/v1/message.proto";

option go_package = "events/v1";

message StreamEvent {
  string sender_user_id = 1;
  repeated string receivers_user_id = 2;
  bytes payload = 3;
}

service EventsService {
  rpc SubscribeEventsStream(SubscribeEventsStreamRequest) returns (stream SubscribeEventsStreamResponse) {}
}

message SubscribeEventsStreamRequest {}

message SubscribeEventsStreamResponse {
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_ADD_CHAT = 1;
    TYPE_REMOVE_CHAT = 2;
    TYPE_UPDATE_CHAT = 3;
    TYPE_ADD_MESSAGE = 4;
    TYPE_REMOVE_MESSAGE = 5;
    TYPE_UPDATE_MESSAGE = 6;
    TYPE_CLEAR_CHAT = 7;
    TYPE_MESSAGE_SEEN = 8;
  }

  string name = 1;
  Type type = 2;

  oneof payload {
    AddChat add_chat = 3;
    AddMessage add_message = 4;
  }
}

message AddChat {
  model.chat.v1.Chat chat = 1;
}

message AddMessage {
  string chat_id = 1;
  model.message.v1.Message message = 2;
}
